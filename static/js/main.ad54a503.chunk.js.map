{"version":3,"sources":["assets/bg.jpg","components/Fullpage.js","components/DownArrow.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fullpage","_this$props","this","props","children","_this$props$bg","bg","react_default","a","createElement","className","concat","id","style","alt","src","bg_pic","Component","DownArrow","filter","isInvert","icon","width","TitlesAndIcons","Object","classCallCheck","_super","call","prevProps","prevState","colorSet","elements","document","getElementsByClassName","i","length","color","data","colorSets","snowColor","_this","modules","name","Fullpage_Fullpage","backgroundColor","bgColor","lib_default","freezeOnBlur","useTwinkleEffect","vMaxX","vMaxY","followMouse","snowStick","targetElement","titleColor","title","subTitleColor","subtitle","keys","links","map","k","react_social_icons","key","url","iconColor","activeClass","to","spy","smooth","duration","components_DownArrow","icons","down","sections","items","obj","content","SkillCard","skill","background-color","image","height","SkillSection","SkillCard_SkillCard","state","wandIcon","magicWand","_this2","href","onClick","scrollPos","window","scrollY","ColorChangerTrigger","onMouseEnter","setState","magicWandHover","onMouseLeave","display","showWand","App","handleScroll","event","scrollBreaked","scrollTo","getRandomColor","cs","Math","floor","random","addEventListener","removeEventListener","NavBar_TitlesAndIcons","changeColor","bind","TitlesAndIcons_TitlesAndIcons","AboutSection_TitlesAndIcons","SkillSection_SkillSection","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad54a503.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.efdba046.jpg\";","import React, { Component } from 'react';\r\nimport '../style/Fullpage.css';\r\nimport bg_pic from './../assets/bg.jpg';\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n    const { children, bg = false } = this.props\r\n    return (\r\n      <section className={`fullpage ${this.props.className || ''}`} id={this.props.id} style={this.props.style}>\r\n        {bg && <img className=\"background-picture\" alt='background' src={bg_pic} />}\r\n        {children}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../style/DownArrow.css\"\r\n\r\nconst DownArrow = (props) => {\r\n    return (\r\n        <img\r\n            alt=\"shadow-drop\"\r\n            style={{\r\n                filter: `${props.isInvert ? \"invert(100%)\" : \"none\"}`\r\n            }}\r\n            className=\"shadow-drop-2-top\"\r\n            src={props.icon} width=\"30px\" />\r\n    )\r\n}\r\n\r\n\r\nexport default DownArrow\r\n","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport data from \"../data\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport '../style/TitlesAndIcons.css'\r\nimport { Element, Link } from \"react-scroll/modules\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //changing snowStorm color by style, because it set props in its constructor\r\n        if (prevProps.colorSet != this.props.colorSet) {\r\n            let elements = document.getElementsByClassName(\"___snowStorm___\");\r\n            for (let i = 0; i < elements.length; i++) {\r\n                elements[i].style.color = data.colorSets[this.props.colorSet].snowColor\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return [\r\n            <Element name=\"homeSection\" className=\"element\" />,\r\n            <Fullpage bg={true} className=\"first\" id=\"snow-target\"\r\n                style={{\r\n                    backgroundColor: `${data.colorSets[this.props.colorSet].bgColor}`\r\n                }}>\r\n                <SnowStorm\r\n                    freezeOnBlur={false}\r\n                    useTwinkleEffect={false}\r\n                    vMaxX={5}\r\n                    vMaxY={10}\r\n                    followMouse={false}\r\n                    snowStick={false}\r\n                    snowColor=\"rgba(255,255,255,0.5)\"\r\n                    targetElement=\"snow-target\"\r\n\r\n                />\r\n                <div className=\"page-body\">\r\n                    <h1 className=\"title\" style={{ color: `${data.colorSets[this.props.colorSet].titleColor}` }}>\r\n                        {data.title}\r\n                    </h1>\r\n                    <h3 className=\"lead\" style={{ color: `${data.colorSets[this.props.colorSet].subTitleColor}` }}>\r\n                        {data.subtitle}\r\n                    </h3>\r\n                    <div className=\"social-icon-container\">\r\n                        {\r\n                            Object.keys(data.links).map(k => {\r\n                                return (\r\n                                    <SocialIcon key={k} url={data.links[k]} bgColor={data.colorSets[this.props.colorSet].iconColor} />\r\n                                )\r\n                            }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down} />\r\n                </Link>\r\n            </Fullpage>\r\n        ];\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data\";\r\nimport '../style/AboutSection.css'\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport { Link, Element } from 'react-scroll'\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    render() {\r\n        return [\r\n            <Element name=\"aboutSection\" className=\"element\" />,\r\n            <Fullpage className=\"second\">\r\n\r\n                <div className=\"page-body\">\r\n                    <h2 className=\"title\">{data.sections[0].title}</h2>\r\n                    <hr />\r\n                    {\r\n                        data.sections[0].items.map((obj) => {\r\n                            return (<p className=\"content\">{obj.content}</p>)\r\n                        })\r\n                    }\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"skillSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down} isInvert={true} />\r\n                </Link>\r\n            </Fullpage>\r\n        ]\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../style/SkillCard.css'\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props\r\n        return (\r\n            <div className=\"card\"\r\n                style={{ \"background-color\": `${skill.content.color}` }}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} width=\"150px\" height=\"150px\" />\r\n                </div>\r\n\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n                {/*<div*/}\r\n                {/*className=\"skill-level\"*/}\r\n                {/*style={*/}\r\n                {/*{*/}\r\n                {/*width:`${skill.content.level*10}%`,*/}\r\n                {/*\"background-color\": `${skill.content.color}`,*/}\r\n                {/*height: \"20px\",*/}\r\n                {/*\"align-self\" : \"flex-start\"*/}\r\n                {/*}*/}\r\n                {/*}/>*/}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data\";\r\nimport \"../style/SkillSection.css\";\r\nimport { Element } from 'react-scroll'\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"third\">\r\n                <Element name=\"skillSection\" className=\"element\" />\r\n                <h2 className=\"title\">{data.sections[1].title}</h2>\r\n                <div className=\"card-wrapper\">\r\n                    {data.sections[1].items.map(skill => {\r\n                        return (\r\n                            <SkillCard skill={skill} />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport data from \"../data\";\r\nimport '../style/NavBar.css'\r\nimport { Link } from 'react-scroll'\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wandIcon: data.icons.magicWand\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-bar\">\r\n\r\n                <div className=\"nav-menu\">\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"homeSection\" spy={true} smooth={true}\r\n                        duration={500}>\r\n                        Home\r\n                    </Link>\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true}\r\n                        duration={500}>\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"skillSection\" spy={true} smooth={true}\r\n                        duration={500}>\r\n                        Skills\r\n                    </Link>\r\n                </div>\r\n                <a className=\"nav-icon\" href=\"#\">\r\n                    <img src={this.state.wandIcon}\r\n                        onClick={() => {\r\n                            let scrollPos = window.scrollY\r\n                            this.props.ColorChangerTrigger(scrollPos)\r\n                        }}\r\n                        onMouseEnter={() => {\r\n                            this.setState({\r\n                                wandIcon: data.icons.magicWandHover\r\n                            })\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                            this.setState({\r\n                                wandIcon: data.icons.magicWand\r\n                            })\r\n                        }}\r\n                        height={25}\r\n                        style={{\r\n                            display: `${this.props.showWand ? \"\" : \"none\"}`\r\n                        }} />\r\n                </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\r\nimport AboutSection from \"./sections/AboutSection\";\r\nimport SkillSection from \"./sections/SkillSection\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport \"./style/App.css\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            colorSet: 0,\r\n            showWand: true,\r\n            scrollPos: 0,\r\n            scrollBreaked: false\r\n        }\r\n    }\r\n\r\n    /** change color  method\r\n     * it store last scroll position before change the colorset*/\r\n    changeColor(scrollPos) {\r\n        this.setState({\r\n            colorSet: this.getRandomColor(),\r\n            scrollBreaked: true,\r\n            scrollPos: scrollPos\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = (event) => {\r\n        // jump to last scroll position after color change, to keep position\r\n        if (window.scrollY == 0 && this.state.scrollBreaked) {\r\n            window.scrollTo(0, this.state.scrollPos)\r\n            this.setState({ scrollBreaked: false })\r\n        } // magic wand only works on title section\r\n        else if (window.scrollY <= 300) {\r\n            this.setState({ showWand: true })\r\n        }\r\n        else { this.setState({ showWand: false }) }\r\n    }\r\n\r\n    getRandomColor = () => {\r\n        let cs = Math.floor((Math.random() * 4) + 0)\r\n        // making sure to get a different number\r\n        return (cs === this.state.colorSet) ? this.getRandomColor() : cs\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"App\">\r\n                <NavBar ColorChangerTrigger={this.changeColor.bind(this)} showWand={this.state.showWand} />\r\n                <TitlesAndIcons colorSet={this.state.colorSet} />\r\n                <AboutSection />\r\n                <SkillSection />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}